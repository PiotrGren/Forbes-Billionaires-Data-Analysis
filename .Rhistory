pon_name <- rep(NA, 2600)
pon_rank <- rep(NA, 2600)
#wyszukujemy osoby poniżej wybranego roku i pobieramy interesujące nas informacje do wektorów
for(i in 1:2600)
{
if(billionaires$age[i] <= l){
pon_age[i] <- billionaires$age[i]
pon_name[i] <- billionaires$name[i]
pon_rank[i] <- billionaires$rank[i]
#usuwamy wszystkie dane NA z wektorów i tworzymy ramkę danych z zebranych informacji
pon_age <- pon_age[!is.na(pon_age)]
pon_name <- pon_name[!is.na(pon_name)]
pon_rank <- pon_rank[!is.na(pon_rank)]
PONIZEJ <- data.frame("Nazwisko" = pon_name, "Wiek" = pon_age, "Aktualne miejsce w rankingu" = pon_rank)
}
}
#dodajemy do ramki do pierwszego wiersza info na temat jaki wiek był wybrany do wyszukania osób poniżej tego roku życia
w_rok <- c("Wybrany wiek:", w, NA)
PONIZEJ <- rbind(w_rok, PONIZEJ)
#wysyłami ramkę do pliku
write.csv(PONIZEJ, "C:/Users/Piotrek/Desktop/Uczelnia/Programowanie w R/Projekt Końcowy/Rok życia/Miliarderzy ponizej wybranego roku zycia.csv")
}
}
#funkcja wybierająca i analizująca branżę
#tworzymy pomocniczą ramke danych taką jak networth tylko z ujętymi branżami miliarderów
branzaa <- 1:2600
for(i in 1:2600){
branzaa[i] <- billionaires[i, 6]
}
networth_branza <- cbind(networth[,1], branzaa)
networth_branza <- cbind(networth_branza, networth[,2:9])
colnames(networth_branza) <- c("names", "branza", "2022", "2021", "2020", "2019", "2018", "2017", "2016", "2015")
#funkcja
branza <- function(b){
#branza <- data.frame("Ranking aktualnie" = c("Wybrana branza", rep(NA, 2599)), "Nazwisko" = c(b, rep(NA, 2599)), "Wiek" = )
#jak w funkcji powyzej_ponizej() zamieniamy słowo na duże litery i usuwamy nadmiarowe spacje
b <- gsub(" ", "", b)
b <- gsub("  ", "", b)
b <- gsub("   ", "", b)
b <- toupper(b)
#pobieramy do pomocniczej ramki ramke billionaires żeby zamienić w niej nazwy branzy tak aby funkcja mogła wyszukać tą która nas interesuje
bill <- billionaires
bill$industry <- gsub(" ", "", bill$industry)
bill$industry <- toupper(bill$industry)
bill
#pobieramy dane na temat miliarderów z danej branży i ich aktualnego majątku
branza <- bill[which(bill$industry == b), c(1:5, 7)]
colnames(branza) <- c("Aktualny ranking", "Nazwisko", "Wiek", "Kraj pochodzenia", "Zrodlo dochodu", "Aktualny.majatek") #zamieniamy nazwy kolumn
branza <- rbind(c(NA, stri_paste("Wybrana branza: ", b), NA, NA, NA, NA, NA), branza) #dodajemy pierwszy wiersz który będzie miał informacje na temat wybranej w funkcji branzy
#wysylamy stworzoną ramkę do pliku
write.csv(branza, "C:/Users/Piotrek/Desktop/Uczelnia/Programowanie w R/Projekt Końcowy/Analiza branzy/Miliarderzy z wybranej branzy.csv")
#aby obliczyć udział branży w ogólnej sumie majątków w 2022 roku (aktualny stan) najpierw pobieramy majątku osób z wyszukanej branży
#i zamieniamy je na wartości numeryczne usuwając z nich znaki nieliczbowe
maj <- branza$Aktualny.majatek
maj <- gsub("\\$", "", maj)
maj <- gsub(" B", "", maj)
maj <- as.numeric(maj)
maj <- maj[-1] #usuwamy bo jest tam NA bo ramka ma tam informację na temat wybranej branzy
#tworzymy ramkę samych wartości miliarderów z wybranej branzy
wartosci <- data.frame("Nazwisko" = branza$Nazwisko[-1], "Wartosc" = maj)
wartosci <- arrange(wartosci, desc(Wartosc)) #sortujemy ją wartościami w dół
branze <- as.factor(billionaires$industry) #pobieramy branze jako factor
branze <- levels(branze) #pobieramy unikatowe dane (nazwy branzy)
#pomocnicza ramka w której zapiszemy informacje na temat sumy majątków każdej branży
suma <- data.frame("Branza" = branze, "suma" = rep(0, 18))
#szukamy majątków z danej branży i sumujemy je wpisując do ramki przy odpowiedniej branży
for(i in 1:18){
for(j in 1:2600){
if(networth_branza$branza[j] == branze[i]){
suma[i,2] <- suma[i,2] + networth_branza$`2022`[j]
}
}
}
#nazwy branz dajemy wielkimi literami oraz usuwamy spacje żeby porównać z wybraną branżą
suma$Branza <- toupper(suma$Branza)
suma$Branza <- gsub(" ", "", suma$Branza)
suma_wszystkich <- sum(suma[,2]) - suma[which(suma$Branza == b), 2] #sumujemy majątek wszystkich branży oprócz wybranej
#obliczamy procentowy udział naszej branzy i reszty branz razem
piepercentage <- c(round(suma_wszystkich/sum(suma[,2]) * 100, 2), round(suma[which(suma$Branza == b), 2]/sum(suma[,2]) * 100, 2))
year <- c(2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022) #wektor pomocniczy do wykresu
pdf("C:/Users/Piotrek/Desktop/Uczelnia/Programowanie w R/Projekt Końcowy/Analiza branzy/Analiza.pdf", height = 20, width = 20)
#tworzymy 6 wykresów na raz, majątkóW 6 najbogatszych z wybranej branzy
par(mfrow=c(2,3), col = "black")
for(i in 1:6){
plot(year, networth[which(networth$names == wartosci$Nazwisko[i]), c(9:2)], type = "b", col = terrain.colors(20)[15], pch = 16, xlab = "Rok", ylab = "Wrtość majątku [MLD]", bty = "n",
font.main = 2, las = 0, lty = 1, lwd = 3, main = wartosci$Nazwisko[i])
}
#ustawiamy wykresy znowy na wyświetlanie jednego na raz i tworzymy wykres kołowo procentowego udziału wybranej branżu w ogólnej liczbie majątków
par(mfrow = c(1,1), col = "black")
pie(c(suma_wszystkich, suma[which(suma$Branza == b), 2]), labels = stri_paste(piepercentage, "%"), edges = 600, col = c("darkolivegreen", "darkgray"), main = c("Udział branzy ", b, "w sumie majatkow miliarderow", "w roku 2022"))
legend("bottomright", c("Reszta branzy", b), col = c("darkolivegreen", "darkgray"), bty = "n", pch = 15)
dev.off()
}
#Funkcja zestawiająca dane konkretnej osoby
zestawienie <- function(imie){
#pobieramy konretne dane osoby która nas interesuje
rank <- billionaires[which(billionaires$name == imie), 1]
wiek <- billionaires[which(billionaires$name == imie), 3]
count <- billionaires[which(billionaires$name == imie), 4]
zrodelko <- billionaires[which(billionaires$name == imie), 5]
branza <- billionaires[which(billionaires$name == imie), 6]
p_worth <- billionaires[which(billionaires$name == imie), 7]
p_progres <- ZestawieniePr[which(ZestawieniePr$Nazwisko== imie), 4]
progres_lata <- ZestawieniePr[which(ZestawieniePr$Nazwisko== imie), 5]
p_regres <- ZestawieniePr[which(ZestawieniePr$Nazwisko== imie), 6]
regres_lata <- ZestawieniePr[which(ZestawieniePr$Nazwisko== imie), 7]
#pobieramy z internetu aktualny kurs dolara
sciezka <- paste("https://www.bankier.pl/waluty")
path <- "/html/body/div[3]/div[1]/div[2]/div[1]/div[1]/div[2]/div/div[4]/div[2]/table"
nodes <- html_nodes(read_html(sciezka), xpath=(path))
kurs <- html_table(nodes)
kurs <- kurs[[1]]
#po pobraniu kursu pobieramy czas pobrania kursu
czas <- Sys.time()
#pobraną tabelę zmieniamy w ramkę danych
kurs <- as.data.frame(kurs)
#wybieramy z niej kurs dolara
dolar <- as.vector(kurs[1,2])
#zamieniamy przecinek na kropkę a następnie sam dolar na wartość numeryczną aby można było przeliczyć majątek na PLN
dolar <- gsub("\\,", '\\.', dolar)
dolar <- as.numeric(dolar)
#przeliczamy majątek na złotówki z zaokrągleniem do 2 miejsc po przecinku
networth_PLN <- round(networth$X2022[which(networth$names == imie)] * dolar, 2)
#tworzymy skrót od kraju pochodzenia miliardera
words <- stri_extract_all_words(count) #wyciągamy słowa z kraju pochodzenia ponieważ od tego zależy jak będzie wyglądał skrót
skrot <- ""
#jeżeli nazwa kraju jest jednoczłonowa to skrót to pierwsze 3 litery zamienione na wielkie
if(length(words[[1]]) == 1){
for(i in words){
skrot <- paste(skrot, toupper(substr(i, 1, 3)),sep = "", collapse = "")
}
}
#jeżeli nazwa jest dwuczłonowa to skrót to dwie pierwsze litery z każdego słowa zamienione na wielkie
else if(length(words[[1]]) == 2){
for(i in words){
skrot <- paste(skrot, toupper(substr(i, 1, 1)), sep = "", collapse = "")
}
}
#jeżeli jest trzyczłonowa to podobnie jak w dwuczłonowej
else if(length(words[[1]]) == 3){
skrot <- paste(skrot, toupper(substr(i, 1, 1)), sep = "", collapse = "")
}
#pojawia się jeden kraj którego nazwa jest skomplikowana i 4 członowa, na dodatek skrót od pierwszych liter nic by nie mówił
#więc jest po prostu stworzony osobno
else{
skrot <- "St. KAN"
}
#następnie funkcja wypisuje wszystkie zgromadzonne informacje, niektóre w odpowiednim formacie
print(sprintf("Imię i Nazwisko: %s", imie))
print(sprintf("Kraj pochodzenia: %s", skrot))
print(sprintf("Aktualne miejsce w rankingu: %s", rank))
print(sprintf("Aktualna wartość majątku: %s", p_worth))
print(paste(sprintf("Aktualna wartość w PLN: %s", networth_PLN), sprintf("MLD zł")))
print(sprintf("Aktualny kurs dolara: %g", dolar))
print(sprintf("Data pobrania kursu: %s", format(czas, format = "%d %b %Y %H:%M")))
print(sprintf("Główne źródło dochodu: %s", zrodelko))
print(paste(sprintf("Największy progres majątku na przestrzeni lat: %s", "$"), sprintf("%s", p_progres), sprintf("%s", "B")))
print(sprintf("Lata między, którymi nastąpił progres: %s", progres_lata))
print(paste(sprintf("Największy regres majątku na przestrzeni lat: %s", "$"), sprintf("%s", p_regres), sprintf("%s", "B")))
print(sprintf("Lata między, którymi nastąpił regres: %s", regres_lata))
#następnie dla wyszukanego miliardera tworzymy wykres majątku na przestrzeni lat z zaznaczonym progresem i regresem
#analogicznie jak w funkcji z progresem i regresem
pr1 <- substr(progres_lata, 1, 4)
pr1 <- as.numeric(pr1)
pr2 <- substr(progres_lata, 8, 11)
pr2 <- as.numeric(pr2)
pr <- networth[which(networth$names == imie), 9:2]
for(j in 9:2){
if(j == pr1 - 2013 | j == pr2 - 2013){
pr[j - 1] <- pr[j - 1]
}
else{
pr[j - 1] <- NA
}
}
rg1 <- substr(regres_lata, 1, 4)
rg1 <- as.numeric(rg1)
rg2 <- substr(regres_lata, 8, 11)
rg2 <- as.numeric(rg2)
rg <- networth[which(networth$names == imie), 9:2]
for(j in 9:2){
if(j == rg1 - 2013 | j == rg2 - 2013){
rg[j - 1] <- rg[j - 1]
}
else{
rg[j - 1] <- NA
}
}
year <- c(2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022)
worth <- networth[which(networth$names == imie), 9:2]
plot(year, worth, type = "b", pch = 16, col = "black", xlab = "Rok", ylab = "Wrtość majątku [MLD]", bty = "n", main = c(ZestawieniePr[i, 1]),
font.main = 2, las = 0, lty = 1, lwd = 3)
lines(year, pr, type = 'b', pch = 16, col = "green", lwd = 3)
lines(year, rg, type = "b", pch = 16, col = "red", lwd = 3)
legend("topleft", c("Wartość majątku na przestrzeni lat", "Największy wzrost wartości majątku", "Największy spadek wartości majątku"),
col = c("black", "green", "red"), bty = "n", pch = c(16, 16, 16))
}
zestawienie("Amancio Ortega ")
#Funkcja zestawiająca dane konkretnej osoby
zestawienie <- function(imie){
#pobieramy konretne dane osoby która nas interesuje
rank <- billionaires[which(billionaires$name == imie), 1]
wiek <- billionaires[which(billionaires$name == imie), 3]
count <- billionaires[which(billionaires$name == imie), 4]
zrodelko <- billionaires[which(billionaires$name == imie), 5]
branza <- billionaires[which(billionaires$name == imie), 6]
p_worth <- billionaires[which(billionaires$name == imie), 7]
p_progres <- ZestawieniePr[which(ZestawieniePr$Nazwisko== imie), 4]
progres_lata <- ZestawieniePr[which(ZestawieniePr$Nazwisko== imie), 5]
p_regres <- ZestawieniePr[which(ZestawieniePr$Nazwisko== imie), 6]
regres_lata <- ZestawieniePr[which(ZestawieniePr$Nazwisko== imie), 7]
#pobieramy z internetu aktualny kurs dolara
sciezka <- paste("https://www.bankier.pl/waluty")
path <- "/html/body/div[3]/div[1]/div[2]/div[1]/div[1]/div[2]/div/div[4]/div[2]/table"
nodes <- html_nodes(read_html(sciezka), xpath=(path))
kurs <- html_table(nodes)
kurs <- kurs[[1]]
#po pobraniu kursu pobieramy czas pobrania kursu
czas <- Sys.time()
#pobraną tabelę zmieniamy w ramkę danych
kurs <- as.data.frame(kurs)
#wybieramy z niej kurs dolara
dolar <- as.vector(kurs[1,2])
#zamieniamy przecinek na kropkę a następnie sam dolar na wartość numeryczną aby można było przeliczyć majątek na PLN
dolar <- gsub("\\,", '\\.', dolar)
dolar <- as.numeric(dolar)
#przeliczamy majątek na złotówki z zaokrągleniem do 2 miejsc po przecinku
networth_PLN <- round(networth$X2022[which(networth$names == imie)] * dolar, 2)
#tworzymy skrót od kraju pochodzenia miliardera
words <- stri_extract_all_words(count) #wyciągamy słowa z kraju pochodzenia ponieważ od tego zależy jak będzie wyglądał skrót
skrot <- ""
#jeżeli nazwa kraju jest jednoczłonowa to skrót to pierwsze 3 litery zamienione na wielkie
if(length(words[[1]]) == 1){
for(i in words){
skrot <- paste(skrot, toupper(substr(i, 1, 3)),sep = "", collapse = "")
}
}
#jeżeli nazwa jest dwuczłonowa to skrót to dwie pierwsze litery z każdego słowa zamienione na wielkie
else if(length(words[[1]]) == 2){
for(i in words){
skrot <- paste(skrot, toupper(substr(i, 1, 1)), sep = "", collapse = "")
}
}
#jeżeli jest trzyczłonowa to podobnie jak w dwuczłonowej
else if(length(words[[1]]) == 3){
skrot <- paste(skrot, toupper(substr(i, 1, 1)), sep = "", collapse = "")
}
#pojawia się jeden kraj którego nazwa jest skomplikowana i 4 członowa, na dodatek skrót od pierwszych liter nic by nie mówił
#więc jest po prostu stworzony osobno
else{
skrot <- "St. KAN"
}
#następnie funkcja wypisuje wszystkie zgromadzonne informacje, niektóre w odpowiednim formacie
print(sprintf("Imię i Nazwisko: %s", imie))
print(sprintf("Kraj pochodzenia: %s", skrot))
print(sprintf("Aktualne miejsce w rankingu: %s", rank))
print(sprintf("Aktualna wartość majątku: %s", p_worth))
print(paste(sprintf("Aktualna wartość w PLN: %s", networth_PLN), sprintf("MLD zł")))
print(sprintf("Aktualny kurs dolara: %g", dolar))
print(sprintf("Data pobrania kursu: %s", format(czas, format = "%d %m %Y %H:%M")))
print(sprintf("Główne źródło dochodu: %s", zrodelko))
print(paste(sprintf("Największy progres majątku na przestrzeni lat: %s", "$"), sprintf("%s", p_progres), sprintf("%s", "B")))
print(sprintf("Lata między, którymi nastąpił progres: %s", progres_lata))
print(paste(sprintf("Największy regres majątku na przestrzeni lat: %s", "$"), sprintf("%s", p_regres), sprintf("%s", "B")))
print(sprintf("Lata między, którymi nastąpił regres: %s", regres_lata))
#następnie dla wyszukanego miliardera tworzymy wykres majątku na przestrzeni lat z zaznaczonym progresem i regresem
#analogicznie jak w funkcji z progresem i regresem
pr1 <- substr(progres_lata, 1, 4)
pr1 <- as.numeric(pr1)
pr2 <- substr(progres_lata, 8, 11)
pr2 <- as.numeric(pr2)
pr <- networth[which(networth$names == imie), 9:2]
for(j in 9:2){
if(j == pr1 - 2013 | j == pr2 - 2013){
pr[j - 1] <- pr[j - 1]
}
else{
pr[j - 1] <- NA
}
}
rg1 <- substr(regres_lata, 1, 4)
rg1 <- as.numeric(rg1)
rg2 <- substr(regres_lata, 8, 11)
rg2 <- as.numeric(rg2)
rg <- networth[which(networth$names == imie), 9:2]
for(j in 9:2){
if(j == rg1 - 2013 | j == rg2 - 2013){
rg[j - 1] <- rg[j - 1]
}
else{
rg[j - 1] <- NA
}
}
year <- c(2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022)
worth <- networth[which(networth$names == imie), 9:2]
plot(year, worth, type = "b", pch = 16, col = "black", xlab = "Rok", ylab = "Wrtość majątku [MLD]", bty = "n", main = c(ZestawieniePr[i, 1]),
font.main = 2, las = 0, lty = 1, lwd = 3)
lines(year, pr, type = 'b', pch = 16, col = "green", lwd = 3)
lines(year, rg, type = "b", pch = 16, col = "red", lwd = 3)
legend("topleft", c("Wartość majątku na przestrzeni lat", "Największy wzrost wartości majątku", "Największy spadek wartości majątku"),
col = c("black", "green", "red"), bty = "n", pch = c(16, 16, 16))
}
zestawienie("Amancio Ortega ")
#Funkcja zestawiająca dane konkretnej osoby
zestawienie <- function(imie){
#pobieramy konretne dane osoby która nas interesuje
rank <- billionaires[which(billionaires$name == imie), 1]
wiek <- billionaires[which(billionaires$name == imie), 3]
count <- billionaires[which(billionaires$name == imie), 4]
zrodelko <- billionaires[which(billionaires$name == imie), 5]
branza <- billionaires[which(billionaires$name == imie), 6]
p_worth <- billionaires[which(billionaires$name == imie), 7]
p_progres <- ZestawieniePr[which(ZestawieniePr$Nazwisko== imie), 4]
progres_lata <- ZestawieniePr[which(ZestawieniePr$Nazwisko== imie), 5]
p_regres <- ZestawieniePr[which(ZestawieniePr$Nazwisko== imie), 6]
regres_lata <- ZestawieniePr[which(ZestawieniePr$Nazwisko== imie), 7]
#pobieramy z internetu aktualny kurs dolara
sciezka <- paste("https://www.bankier.pl/waluty")
path <- "/html/body/div[3]/div[1]/div[2]/div[1]/div[1]/div[2]/div/div[4]/div[2]/table"
nodes <- html_nodes(read_html(sciezka), xpath=(path))
kurs <- html_table(nodes)
kurs <- kurs[[1]]
#po pobraniu kursu pobieramy czas pobrania kursu
czas <- Sys.time()
#pobraną tabelę zmieniamy w ramkę danych
kurs <- as.data.frame(kurs)
#wybieramy z niej kurs dolara
dolar <- as.vector(kurs[1,2])
#zamieniamy przecinek na kropkę a następnie sam dolar na wartość numeryczną aby można było przeliczyć majątek na PLN
dolar <- gsub("\\,", '\\.', dolar)
dolar <- as.numeric(dolar)
#przeliczamy majątek na złotówki z zaokrągleniem do 2 miejsc po przecinku
networth_PLN <- round(networth$X2022[which(networth$names == imie)] * dolar, 2)
#tworzymy skrót od kraju pochodzenia miliardera
words <- stri_extract_all_words(count) #wyciągamy słowa z kraju pochodzenia ponieważ od tego zależy jak będzie wyglądał skrót
skrot <- ""
#jeżeli nazwa kraju jest jednoczłonowa to skrót to pierwsze 3 litery zamienione na wielkie
if(length(words[[1]]) == 1){
for(i in words){
skrot <- paste(skrot, toupper(substr(i, 1, 3)),sep = "", collapse = "")
}
}
#jeżeli nazwa jest dwuczłonowa to skrót to dwie pierwsze litery z każdego słowa zamienione na wielkie
else if(length(words[[1]]) == 2){
for(i in words){
skrot <- paste(skrot, toupper(substr(i, 1, 1)), sep = "", collapse = "")
}
}
#jeżeli jest trzyczłonowa to podobnie jak w dwuczłonowej
else if(length(words[[1]]) == 3){
skrot <- paste(skrot, toupper(substr(i, 1, 1)), sep = "", collapse = "")
}
#pojawia się jeden kraj którego nazwa jest skomplikowana i 4 członowa, na dodatek skrót od pierwszych liter nic by nie mówił
#więc jest po prostu stworzony osobno
else{
skrot <- "St. KAN"
}
#następnie funkcja wypisuje wszystkie zgromadzonne informacje, niektóre w odpowiednim formacie
print(sprintf("Imię i Nazwisko: %s", imie))
print(sprintf("Kraj pochodzenia: %s", skrot))
print(sprintf("Aktualne miejsce w rankingu: %s", rank))
print(sprintf("Aktualna wartość majątku: %s", p_worth))
print(paste(sprintf("Aktualna wartość w PLN: %s", networth_PLN), sprintf("MLD zł")))
print(sprintf("Aktualny kurs dolara: %g", dolar))
print(sprintf("Data pobrania kursu: %s", format(czas, format = "%d %M %Y %H:%M")))
print(sprintf("Główne źródło dochodu: %s", zrodelko))
print(paste(sprintf("Największy progres majątku na przestrzeni lat: %s", "$"), sprintf("%s", p_progres), sprintf("%s", "B")))
print(sprintf("Lata między, którymi nastąpił progres: %s", progres_lata))
print(paste(sprintf("Największy regres majątku na przestrzeni lat: %s", "$"), sprintf("%s", p_regres), sprintf("%s", "B")))
print(sprintf("Lata między, którymi nastąpił regres: %s", regres_lata))
#następnie dla wyszukanego miliardera tworzymy wykres majątku na przestrzeni lat z zaznaczonym progresem i regresem
#analogicznie jak w funkcji z progresem i regresem
pr1 <- substr(progres_lata, 1, 4)
pr1 <- as.numeric(pr1)
pr2 <- substr(progres_lata, 8, 11)
pr2 <- as.numeric(pr2)
pr <- networth[which(networth$names == imie), 9:2]
for(j in 9:2){
if(j == pr1 - 2013 | j == pr2 - 2013){
pr[j - 1] <- pr[j - 1]
}
else{
pr[j - 1] <- NA
}
}
rg1 <- substr(regres_lata, 1, 4)
rg1 <- as.numeric(rg1)
rg2 <- substr(regres_lata, 8, 11)
rg2 <- as.numeric(rg2)
rg <- networth[which(networth$names == imie), 9:2]
for(j in 9:2){
if(j == rg1 - 2013 | j == rg2 - 2013){
rg[j - 1] <- rg[j - 1]
}
else{
rg[j - 1] <- NA
}
}
year <- c(2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022)
worth <- networth[which(networth$names == imie), 9:2]
plot(year, worth, type = "b", pch = 16, col = "black", xlab = "Rok", ylab = "Wrtość majątku [MLD]", bty = "n", main = c(ZestawieniePr[i, 1]),
font.main = 2, las = 0, lty = 1, lwd = 3)
lines(year, pr, type = 'b', pch = 16, col = "green", lwd = 3)
lines(year, rg, type = "b", pch = 16, col = "red", lwd = 3)
legend("topleft", c("Wartość majątku na przestrzeni lat", "Największy wzrost wartości majątku", "Największy spadek wartości majątku"),
col = c("black", "green", "red"), bty = "n", pch = c(16, 16, 16))
}
zestawienie("Amancio Ortega ")
#Funkcja zestawiająca dane konkretnej osoby
zestawienie <- function(imie){
#pobieramy konretne dane osoby która nas interesuje
rank <- billionaires[which(billionaires$name == imie), 1]
wiek <- billionaires[which(billionaires$name == imie), 3]
count <- billionaires[which(billionaires$name == imie), 4]
zrodelko <- billionaires[which(billionaires$name == imie), 5]
branza <- billionaires[which(billionaires$name == imie), 6]
p_worth <- billionaires[which(billionaires$name == imie), 7]
p_progres <- ZestawieniePr[which(ZestawieniePr$Nazwisko== imie), 4]
progres_lata <- ZestawieniePr[which(ZestawieniePr$Nazwisko== imie), 5]
p_regres <- ZestawieniePr[which(ZestawieniePr$Nazwisko== imie), 6]
regres_lata <- ZestawieniePr[which(ZestawieniePr$Nazwisko== imie), 7]
#pobieramy z internetu aktualny kurs dolara
sciezka <- paste("https://www.bankier.pl/waluty")
path <- "/html/body/div[3]/div[1]/div[2]/div[1]/div[1]/div[2]/div/div[4]/div[2]/table"
nodes <- html_nodes(read_html(sciezka), xpath=(path))
kurs <- html_table(nodes)
kurs <- kurs[[1]]
#po pobraniu kursu pobieramy czas pobrania kursu
czas <- Sys.time()
#pobraną tabelę zmieniamy w ramkę danych
kurs <- as.data.frame(kurs)
#wybieramy z niej kurs dolara
dolar <- as.vector(kurs[1,2])
#zamieniamy przecinek na kropkę a następnie sam dolar na wartość numeryczną aby można było przeliczyć majątek na PLN
dolar <- gsub("\\,", '\\.', dolar)
dolar <- as.numeric(dolar)
#przeliczamy majątek na złotówki z zaokrągleniem do 2 miejsc po przecinku
networth_PLN <- round(networth$X2022[which(networth$names == imie)] * dolar, 2)
#tworzymy skrót od kraju pochodzenia miliardera
words <- stri_extract_all_words(count) #wyciągamy słowa z kraju pochodzenia ponieważ od tego zależy jak będzie wyglądał skrót
skrot <- ""
#jeżeli nazwa kraju jest jednoczłonowa to skrót to pierwsze 3 litery zamienione na wielkie
if(length(words[[1]]) == 1){
for(i in words){
skrot <- paste(skrot, toupper(substr(i, 1, 3)),sep = "", collapse = "")
}
}
#jeżeli nazwa jest dwuczłonowa to skrót to dwie pierwsze litery z każdego słowa zamienione na wielkie
else if(length(words[[1]]) == 2){
for(i in words){
skrot <- paste(skrot, toupper(substr(i, 1, 1)), sep = "", collapse = "")
}
}
#jeżeli jest trzyczłonowa to podobnie jak w dwuczłonowej
else if(length(words[[1]]) == 3){
skrot <- paste(skrot, toupper(substr(i, 1, 1)), sep = "", collapse = "")
}
#pojawia się jeden kraj którego nazwa jest skomplikowana i 4 członowa, na dodatek skrót od pierwszych liter nic by nie mówił
#więc jest po prostu stworzony osobno
else{
skrot <- "St. KAN"
}
#następnie funkcja wypisuje wszystkie zgromadzonne informacje, niektóre w odpowiednim formacie
print(sprintf("Imię i Nazwisko: %s", imie))
print(sprintf("Kraj pochodzenia: %s", skrot))
print(sprintf("Aktualne miejsce w rankingu: %s", rank))
print(sprintf("Aktualna wartość majątku: %s", p_worth))
print(paste(sprintf("Aktualna wartość w PLN: %s", networth_PLN), sprintf("MLD zł")))
print(sprintf("Aktualny kurs dolara: %g", dolar))
print(sprintf("Data pobrania kursu: %s", format(czas, format = "%d %B %Y %H:%M")))
print(sprintf("Główne źródło dochodu: %s", zrodelko))
print(paste(sprintf("Największy progres majątku na przestrzeni lat: %s", "$"), sprintf("%s", p_progres), sprintf("%s", "B")))
print(sprintf("Lata między, którymi nastąpił progres: %s", progres_lata))
print(paste(sprintf("Największy regres majątku na przestrzeni lat: %s", "$"), sprintf("%s", p_regres), sprintf("%s", "B")))
print(sprintf("Lata między, którymi nastąpił regres: %s", regres_lata))
#następnie dla wyszukanego miliardera tworzymy wykres majątku na przestrzeni lat z zaznaczonym progresem i regresem
#analogicznie jak w funkcji z progresem i regresem
pr1 <- substr(progres_lata, 1, 4)
pr1 <- as.numeric(pr1)
pr2 <- substr(progres_lata, 8, 11)
pr2 <- as.numeric(pr2)
pr <- networth[which(networth$names == imie), 9:2]
for(j in 9:2){
if(j == pr1 - 2013 | j == pr2 - 2013){
pr[j - 1] <- pr[j - 1]
}
else{
pr[j - 1] <- NA
}
}
rg1 <- substr(regres_lata, 1, 4)
rg1 <- as.numeric(rg1)
rg2 <- substr(regres_lata, 8, 11)
rg2 <- as.numeric(rg2)
rg <- networth[which(networth$names == imie), 9:2]
for(j in 9:2){
if(j == rg1 - 2013 | j == rg2 - 2013){
rg[j - 1] <- rg[j - 1]
}
else{
rg[j - 1] <- NA
}
}
year <- c(2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022)
worth <- networth[which(networth$names == imie), 9:2]
plot(year, worth, type = "b", pch = 16, col = "black", xlab = "Rok", ylab = "Wrtość majątku [MLD]", bty = "n", main = c(ZestawieniePr[i, 1]),
font.main = 2, las = 0, lty = 1, lwd = 3)
lines(year, pr, type = 'b', pch = 16, col = "green", lwd = 3)
lines(year, rg, type = "b", pch = 16, col = "red", lwd = 3)
legend("topleft", c("Wartość majątku na przestrzeni lat", "Największy wzrost wartości majątku", "Największy spadek wartości majątku"),
col = c("black", "green", "red"), bty = "n", pch = c(16, 16, 16))
}
